import logging
import os

import boto3
import psycopg2 as PG

# set up logger
logger = logging.getLogger()
if os.environ["DEBUG"]:
    logger.setLevel(logging.INFO)
else:
    logger.setLevel(logging.ERROR)

# Name of db configs table in DynamoDB
DDB_TABLE = os.environ['CONFIGS_TABLE']

class DBC(object):
    """
    Database Connector that uses
    DynamoDB for config info based
    on supplied app_id.
    """
    def __init__(self, app_id):
        """
        Initialization
        """
        self.conn = None
        self.app_id = app_id
        self.conf = self.get_config(app_id)
        
    def get_config(self,app_id):
        """
        Attempt to retrieve client profile using
        token data
        """
        # get service connection
        ddb = boto3.resource('dynamodb')
        logging.info(f"{self.app_id} / {DDB_TABLE}")
        # query ddb
        tab = ddb.Table(DDB_TABLE)
        response = tab.get_item(
            Key={
                "app_id": self.app_id,
            }
        )
        logger.info("conf retrieved...")

        return response['Item']

    def connect(self):
        """
        Open a connection to db defined
        in config
        """
        if self.conn == None:
            args = self.conf['db']
            logger.info(f"Getting {args['host']}/{args['dbname']}")
            self.conn = PG.connect(**args)
        return self.conn
